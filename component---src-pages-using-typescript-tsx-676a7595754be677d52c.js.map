{"version":3,"file":"component---src-pages-using-typescript-tsx-676a7595754be677d52c.js","mappings":"+LA4CaA,EAA0B,kBAAMC,EAAAA,cAACC,EAAAA,EAAD,CAAKC,MAAM,oBAAjD,EAEP,UAjCwD,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,KACAC,EAHsD,EAGtDA,SAHsD,OAKtDL,EAAAA,cAACM,EAAAA,EAAD,CAAQJ,MAAM,mBAAmBG,SAAUA,GACzCL,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAD3C,+DAE8CA,EAAAA,cAAAA,KAAAA,KAAAA,eAF9C,wEAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAD3C,oBAEMA,EAAAA,cAAAA,KAAAA,KAAAA,cAFN,gBAEsCA,EAAAA,cAAAA,KAAAA,KAAAA,YAFtC,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCI,EADjC,uBAC2D,IACxDD,EAAKI,KAAKC,UAFb,KAIAR,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,yEAAR,kCAFF,KAOAT,EAAAA,cAACU,EAAAA,KAAD,CAAMC,GAAG,KAAT,2BA3BJ,C,+ECRMC,EAAS,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOW,EAAV,EAAUA,UAAV,OACb,8BACE,uBAAKC,UCLQ,6BDMX,0BACE,sBAAIA,UCRM,8BDSR,gBAAC,EAAAJ,KAAD,CAAMC,GAAG,KAAKT,IAEfW,EAAUE,KAAI,SAAAC,GAAK,OAClB,sBAAIC,IAAKD,EAAME,MACb,gBAAC,EAAAR,KAAD,CAAMC,GAAIK,EAAMG,MAAOH,EAAME,MAFb,MAPb,EAsBfN,EAAOQ,aAAe,CACpBlB,MAAM,UACNW,UAAW,IAGb,QEAA,EA5Be,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACTd,GAAQe,EAAAA,EAAAA,gBAAe,aAAvBf,KAeDL,EAAQK,EAAKgB,aAAarB,MAC1BW,EAAYN,EAAKgB,aAAaV,UAEpC,OACE,uBAAKC,UAAU,kBACb,gBAAC,EAAD,CAAQZ,MAAOA,EAAOW,UAAWA,IACjC,4BAAOQ,GACP,oCAAW,IAAIG,MAAOC,cAAtB,KAGL,C,+CCnBKxB,EAAM,SAAC,GAA4C,IAAD,MAAzCyB,EAAyC,EAAzCA,YAAmBxB,GAAsB,EAA5ByB,KAA4B,EAAtBzB,OAAOmB,EAAe,EAAfA,SAC/Bd,GAASe,EAAAA,EAAAA,gBAAe,cAAxBf,KAgBFqB,EAAkBF,GAAenB,EAAKgB,aAAaG,YACnDG,EAAY,UAAGtB,EAAKgB,oBAAR,aAAG,EAAmBrB,MAExC,OACE,gCACE,6BAAQ2B,EAAkB3B,EAAN,MAAiB2B,EAAiB3B,GACtD,wBAAMgB,KAAK,cAAcY,QAASF,IAClC,wBAAMG,SAAS,WAAWD,QAAS5B,IACnC,wBAAM6B,SAAS,iBAAiBD,QAASF,IACzC,wBAAMG,SAAS,UAAUD,QAAQ,YACjC,wBAAMZ,KAAK,cAAcY,QAAQ,YACjC,wBACEZ,KAAK,iBACLY,SAAS,UAAAvB,EAAKgB,oBAAL,mBAAmBS,cAAnB,eAA2BC,SAA3B,KAEX,wBAAMf,KAAK,eAAeY,QAAS5B,IACnC,wBAAMgB,KAAK,qBAAqBY,QAASF,IACxCP,EAGN,EAEDpB,EAAImB,aAAe,CACjBM,YAAY,IAQd,K","sources":["webpack://samya-ak/./src/pages/using-typescript.tsx","webpack://samya-ak/./src/components/header.js","webpack://samya-ak/./src/components/header.module.scss","webpack://samya-ak/./src/components/layout.js","webpack://samya-ak/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport * as styles from \"./header.module.scss\"\n\nconst Header = ({ title, menuLinks }) => (\n  <header>\n    <div className={styles.nav}>\n      <ul>\n        <li className={styles.logo}>\n          <Link to=\"/\">{title}</Link>\n        </li>\n        {menuLinks.map(props => (\n          <li key={props.name}>\n            <Link to={props.link}>{props.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  menuLinks: PropTypes.array,\n}\n\nHeader.defaultProps = {\n  title: `tai-tle`,\n  menuLinks: [],\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport var logo = \"header-module--logo--y97xu\";\nexport var nav = \"header-module--nav--piaz0\";","import * as React from \"react\"\nimport Header from \"./header\"\nimport { useStaticQuery, graphql} from \"gatsby\"\n\nconst Layout = ({ children }) => {\n  const {site} = useStaticQuery(\n    graphql`\n      query { \n        site {\n        siteMetadata {\n          title\n          menuLinks {\n            name \n            link\n          }\n        }   \n      }\n    }\n    `\n  )\n  const title = site.siteMetadata.title;\n  const menuLinks = site.siteMetadata.menuLinks;\n\n  return (\n    <div className=\"global-wrapper\">\n      <Header title={title} menuLinks={menuLinks} />\n      <main>{children}</main>\n      <footer>Â© {new Date().getFullYear()} </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              github\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"github:card\" content=\"summary\" />\n      <meta\n        name=\"github:creator\"\n        content={site.siteMetadata?.social?.github || ``}\n      />\n      <meta name=\"github:title\" content={title} />\n      <meta name=\"github:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","path","location","Layout","site","buildTime","href","Link","to","Header","menuLinks","className","map","props","key","name","link","defaultProps","children","useStaticQuery","siteMetadata","Date","getFullYear","description","lang","metaDescription","defaultTitle","content","property","social","github"],"sourceRoot":""}