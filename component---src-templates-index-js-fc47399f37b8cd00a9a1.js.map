{"version":3,"file":"component---src-templates-index-js-fc47399f37b8cd00a9a1.js","mappings":"qOA4EA,UAnEkB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnBC,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,sBAAIC,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,sBAAIC,IAAKL,EAAKG,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYV,KAG/B,6BAAQD,EAAKE,YAAYU,MAAa,2BACtC,6BACGZ,EAAKE,YAAYW,QAAQd,KAAI,SAACc,EAASC,GAAV,MAAoB,CAChDA,EAAQ,GAAK,KACb,gBAAC,EAAAL,KAAD,CACEJ,IAAKS,EACLJ,GAAE,aAAe,IAAYG,IAE5BA,GANyB,MAWlC,+BACE,qBACEE,wBAAyB,CACvBC,OAAQhB,EAAKE,YAAYe,aAAejB,EAAKkB,SAE/CP,SAAS,kBAMpB,KAEH,gBAAC,IAAD,CAAYnB,YAAaA,IAG9B,EASM,IAAM2B,EAAO,kBAAM,gBAAC,IAAD,CAAKlB,MAAM,aAAjB,C","sources":["webpack://samya-ak/./src/templates/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport _ from \"lodash\"\nimport Pagination from \"../components/Pagination\"\n\nconst BlogIndex = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small><br/>\n                  <small>\n                    {post.frontmatter.subject.map((subject, index) => [\n                      index > 0 && \", \",\n                      <Link\n                        key={index}\n                        to={`/subjects/${_.kebabCase(subject)}`}\n                      >\n                        {subject}\n                      </Link>,\n                    ])}\n                  </small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <Pagination pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          subject\n        }\n      }\n    }\n  }\n`\n"],"names":["data","pageContext","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","subject","index","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}