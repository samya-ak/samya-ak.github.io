{"version":3,"file":"component---src-templates-blog-post-js-1ba2592025f1bd2c4d3b.js","mappings":"kNAyDA,EA9CY,SAAC,GAAc,IAAD,IAAXA,EAAW,EAAXA,KACPC,GAAOC,EAAAA,EAAAA,gBAAe,aAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAoB,WAATP,EAAoB,aAAe,OACjD,gBAAC,EAAAQ,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,6BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,aAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,aAAA,EAAAA,EAAQc,UAAW,KADhE,IAGE,qBAAGC,KAAI,wBAAwBZ,aAAA,EAAAA,EAAQa,SAAR,KAA/B,oCAOT,E,oBCQYC,EAAO,SAAC,GAAwC,IAAdC,EAAa,EAArCpB,KAAQqB,eAC7B,OACE,gBAAC,IAAD,CACEC,MAAOF,EAAKG,YAAYD,MACxBE,YAAaJ,EAAKG,YAAYC,aAAeJ,EAAKK,SAGvD,EAED,EAjEyB,SAAC,GAGnB,IAAD,MAFJzB,KAAQ0B,EAEJ,EAFIA,SAAUC,EAEd,EAFcA,KAAMxB,EAEpB,EAFoBA,KAAsBiB,EAE1C,EAF0BC,eAC9BO,EACI,EADJA,SAEMC,GAAY,UAAA1B,EAAKC,oBAAL,eAAmBkB,QAAnB,QAElB,OACE,gBAAC,IAAD,CAAQM,SAAUA,EAAUN,MAAOO,GACjC,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYZ,EAAKG,YAAYD,OAC1C,yBAAIF,EAAKG,YAAYU,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCJ,SAAS,gBAEX,4BAEF,uBAAK1B,UAAU,iBACb,sBACE+B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhB,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASH,YAAYD,QAI9B,0BACGK,GACC,gBAAC,EAAAgB,KAAD,CAAMC,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKJ,YAAYD,MADpB,SAOR,8BACE,gBAAC,EAAD,CAAKvB,KAAK,YAIjB,C","sources":["webpack://samya-ak/./src/components/bio.js","webpack://samya-ak/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = ({ type }) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className={type === \"footer\" ? \"footer-bio\" : \"bio\"}>\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpeg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://github.com/${social?.github || ``}`}>\n            You should follow him on GitHub\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <footer>\n        <Bio type=\"footer\" />\n      </footer>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["type","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","github","Head","post","markdownRemark","title","frontmatter","description","excerpt","previous","next","location","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}