{"componentChunkName":"component---src-templates-blog-post-js","path":"/protected-routes-in-nextjs/","result":{"data":{"site":{"siteMetadata":{"title":"samya-ak"}},"markdownRemark":{"id":"59eb8968-26d2-5b1b-9f2f-adf838e07260","excerpt":"The Premise Protected routes allow you to prevent users from accessing certain routes based on the conditions you set. For example, only logged in users can…","html":"<h4>The Premise</h4>\n<p>Protected routes allow you to prevent users from accessing certain routes based on the conditions you set. For example, only logged in users can visit the <code class=\"language-text\">/profile</code> page.</p>\n<p>Coming from the react and react router background, implementing protected routes was as simple as creating a component. This component would take React Node as a prop and return React Node only if certain conditions are met or you would redirect the user to other pages.</p>\n<p>This is how the code for above might look like</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReactNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Navigate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isAuthenticated <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"utils\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ProtectedRoute</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\t\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isAuthenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// user is not authenticated</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Navigate to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> children<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProtectedRoute<span class=\"token punctuation\">;</span></code></pre></div>\n<p>And you would use the <code class=\"language-text\">ProtectedRoute</code> component like</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Routes<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route\n        path<span class=\"token operator\">=</span><span class=\"token string\">\"profile\"</span>\n        element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">&lt;</span>ProtectedRoute<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Profile <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ProtectedRoute<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Since Next.js uses a file-system based routing, we need to take a different approach to implement something like protected routes.</p>\n<h4>The Failures</h4>\n<p>Lets look into implementing public and private routes using the concept of protected routes. A quick search on the web suggested an approach where you would use the react’s useContext hook to check if a user is authenticated and pass authentication state to its children (a next.js page in this case) using a provider. Then, in each page you would implement a useEffect hook with an empty dependency array to manually redirect to another page if the user is not authenticated.</p>\n<p>There’s a problem here. The need to repeat useEffect in every page is an absolute wack idea. Is there a way that would abstain us from repeating useEffect in every page? Yes, higher order components to the rescue.</p>\n<p>We want to prevent unauthenticated users from accessing private routes and also prevent authenticated users from going back to pages accessible to only unauthenticated users. Logged in users should not be able to navigate to the login page. To achieve this, I created two HOCs - withAuth and withGuest. withAuth is for private pages and withGuest is for public pages. Note that we are not using context API here.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/router'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isAuthenticated <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'/utils/auth'</span>\n\n<span class=\"token keyword\">const</span> withAuth <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">object</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  Component<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> Auth<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAuthenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Component <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> Auth\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> withAuth</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/router'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isAuthenticated<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'/utils/auth'</span>\n\n<span class=\"token keyword\">const</span> withGuest <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">object</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  Component<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ComponentType<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> Guest<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> currentPath <span class=\"token operator\">=</span> router<span class=\"token punctuation\">.</span>asPath\n      <span class=\"token comment\">// if user tries to visit un-authenticated pages when user is already logged in</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isAuthenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Component <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> Guest\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> withGuest</code></pre></div>\n<p>You would then use these HOC like</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> withAuth <span class=\"token keyword\">from</span> <span class=\"token string\">'/withAuth'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Dashboard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>Dashboard<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withAuth</span><span class=\"token punctuation\">(</span>Dashboard<span class=\"token punctuation\">)</span></code></pre></div>\n<p>It seemed that everything was working as expected. But there was this one annoying issue. Let’s say that you try to go to the dashboard page without logging in. With our current implementation, the application would redirect you to the dashboard page, render its JSX and then run useEffect which would eventually redirect you back to the login page. Due to this, the user would see the dashboard page for a moment before being redirected to the login page - just a flicker.</p>\n<h4>Okay solution for now</h4>\n<p>Nope! Scratch the idea of HOC as well. Lets look into middleware in next.js.</p>\n<blockquote>\n<p>Middleware allows you to run code before a request is completed, then based on the incoming request, you can modify the response by rewriting, redirecting, modifying the request or response headers, or responding directly.</p>\n</blockquote>\n<p>Looks like just what we need.\nIn a file named middleware.ts placed in your root or src directory -</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NextRequest<span class=\"token punctuation\">,</span> NextResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/server'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">UNAUTH_URLS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      login<span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span>\n <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">AUTH_URLS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      dashboard<span class=\"token operator\">:</span> <span class=\"token string\">'/dashboard'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_UNAUTH_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DEFAULT_AUTH_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">middleware</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>request<span class=\"token operator\">:</span> NextRequest<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> accessToken <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'accessToken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> currUrl <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>nextUrl<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> isUnauthPath <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UNAUTH_URLS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    currUrl<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isAuthPath <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token constant\">AUTH_URLS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> currUrl<span class=\"token operator\">?.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// when user is not logged in and tries to access authenticated pages</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>accessToken <span class=\"token operator\">&amp;&amp;</span> isAuthPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">URL</span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">DEFAULT_UNAUTH_URL</span><span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// when user is logged in  and tries to access un-authenticated pages</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isUnauthPath <span class=\"token operator\">&amp;&amp;</span> accessToken<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token constant\">URL</span></span><span class=\"token punctuation\">(</span><span class=\"token constant\">DEFAULT_AUTH_URL</span><span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ignore middeleware for routes that start with /_next or /static or /api</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  matcher<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'/((?!_next|static|api|favicon.ico|images).*)(.+)'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Reference</h4>\n<ul>\n<li><a href=\"https://dev.to/seven/how-to-implement-protected-routes-in-nextjs-1m50\">Protected routes in next.js</a></li>\n<li><a href=\"https://nextjs.org/docs/advanced-features/middleware\">Middleware in next.js</a></li>\n</ul>","frontmatter":{"title":"Protected routes in next.js","date":"April 09, 2023","description":"Protected routes from react to next.js"}},"previous":{"fields":{"slug":"/oop-in-go/"},"frontmatter":{"title":"From OOP to Go"}},"next":null},"pageContext":{"id":"59eb8968-26d2-5b1b-9f2f-adf838e07260","previousPostId":"4280fd07-230d-5c5f-a118-75bee4d8fe62","nextPostId":null}},"staticQueryHashes":["230163734","3589320610","754622331"]}