{"componentChunkName":"component---src-templates-blog-post-js","path":"/stow/","result":{"data":{"site":{"siteMetadata":{"title":"samya-ak"}},"markdownRemark":{"id":"53619caa-b9c0-526b-bc12-bd18d8cb24ab","excerpt":"The Problem I’ve got my personal machine and work machine. They both share somewhat same dotfiles - configurations that allow me to programme seamlessly.\nI’ve…","html":"<h4>The Problem</h4>\n<p>I’ve got my personal machine and work machine. They both share somewhat same dotfiles - configurations that allow me to programme seamlessly.\nI’ve put these configurations in a git repo in ad hoc manner. Now when I have to setup my dev environment in new machine, I would clone this config repo\nand manually move each config file to the directory it belongs to. So, there’s always two copies of a config file in my machine (one in git repo and another\nin directory where it actually supposed to be). And when I need to update a config file, I need to update in two places for a machine. This is painful!</p>\n<h4>The Solution: <a href=\"https://github.com/aspiers/stow\">Stow</a></h4>\n<blockquote>\n<p>Stow is a symlink farm manager program which takes distinct sets of software and/or data located in separate directories on the filesystem,\nand makes them all appear to be installed in a single directory tree.</p>\n</blockquote>\n<p>You need perl to install stow. You can install perl using <a href=\"https://perlbrew.pl/Installation.html\">perlbrew</a>.\nYou can install stow following guidelines from <a href=\"https://github.com/aspiers/stow/blob/master/INSTALL.md\">here</a> or if you’re on mac, you can use homebrew.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> stow <span class=\"token comment\"># Ubuntu</span>\n\nbrew <span class=\"token function\">install</span> stow <span class=\"token comment\"># Homebrew Mac</span></code></pre></div>\n<h4>Understanding directory structure</h4>\n<p>By default, target destination of the stowed files is parent directory of stow directory (current directory by default).\nWe can change target destination using following command</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">stow -t <span class=\"token punctuation\">[</span>target/path<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>PACKAGE<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># stow -t ~ zsh</span></code></pre></div>\n<p>To make things simpler, let’s place our <code class=\"language-text\">dotfiles</code> in <code class=\"language-text\">$HOME</code> directory.\nWe will treat every directory inside <code class=\"language-text\">dotfiles</code> as <code class=\"language-text\">$HOME</code> directory.\nFor example, <code class=\"language-text\">.zshrc</code> file resides in the path <code class=\"language-text\">~</code> i.e. home directory. So, you can directly put your <code class=\"language-text\">.zshrc</code> file in the directory let’s say <code class=\"language-text\">dotfiles/zsh</code>.\nAnd with the command <code class=\"language-text\">stow zsh</code>, a symlink to the <code class=\"language-text\">.zshrc</code> file is created at <code class=\"language-text\">~</code> directory.</p>\n<p>Similarly, If you want symlink to be created at <code class=\"language-text\">~/.config/nvim</code>, you would create <code class=\"language-text\">nvim/.config/nvim</code> in dotfiles.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">stow -D <span class=\"token operator\">&lt;</span>packagename<span class=\"token operator\">></span> <span class=\"token comment\"># delete stowed package</span>\nstow -R <span class=\"token operator\">&lt;</span>packagename<span class=\"token operator\">></span> <span class=\"token comment\"># restows package</span>\nstow -h <span class=\"token comment\"># for more commands</span></code></pre></div>\n<p>Deleting stowed package doesn’t delete the file but only removes the symlink.</p>\n<h4>Reference</h4>\n<ul>\n<li><a href=\"https://github.com/samya-ak/dotfiles\">dotfiles</a></li>\n</ul>","frontmatter":{"title":"Manage dotfiles using stow","date":"February 20, 2024","description":"Manage dotfiles using stow"}},"previous":{"fields":{"slug":"/utc-timezone-time-conversion/"},"frontmatter":{"title":"Convert UTC time to time in a timezone"}},"next":{"fields":{"slug":"/keycloak-customization/"},"frontmatter":{"title":"Customizing keycloak"}}},"pageContext":{"id":"53619caa-b9c0-526b-bc12-bd18d8cb24ab","previousPostId":"a901fe7d-e5aa-5717-a646-c0134eb808a5","nextPostId":"1e3041cc-7233-5b53-9c57-48917d132f5f"}},"staticQueryHashes":["230163734","3589320610","754622331"]}